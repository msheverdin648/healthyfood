# Generated by Django 3.1 on 2020-09-07 16:53

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Days',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('days_name', models.CharField(max_length=20, verbose_name='День недели')),
            ],
            options={
                'verbose_name': 'День недели',
                'verbose_name_plural': 'Дни недели',
                'db_table': '',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='HeaderSlider',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slider_header', models.CharField(blank=True, max_length=50, null=True, verbose_name='Обозначение о чем этот слайд')),
                ('main_text', models.CharField(max_length=300, verbose_name='Главный текст слайдера')),
                ('small_text', models.CharField(blank=True, max_length=200, null=True, verbose_name='Маленький текст слайдера')),
                ('button', models.CharField(blank=True, max_length=50, null=True, verbose_name='Текст кнопки')),
            ],
            options={
                'verbose_name': 'Слайд хедера',
                'verbose_name_plural': 'Слайды хедера',
                'db_table': '',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MenuGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('catigory', models.CharField(max_length=100, verbose_name='Категория меню')),
            ],
            options={
                'verbose_name': 'Категория меню',
                'verbose_name_plural': 'Категории меню',
                'db_table': '',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PageHeaders',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anons_header', models.CharField(max_length=100, verbose_name='Заголовок анонса')),
                ('anons_header_bold', models.CharField(blank=True, max_length=50, null=True, verbose_name='Выделенный текст заголовка анонса')),
                ('calculator_header', models.CharField(max_length=100, verbose_name='Заголовок калькулятора')),
                ('menu_header', models.CharField(max_length=100, verbose_name='Заголовок меню')),
                ('menu_smalltext', models.CharField(max_length=200, verbose_name='маленький текст в меню')),
                ('buy_header', models.CharField(max_length=100, verbose_name="Заголовок 'Закажи сейчас' ")),
                ('reviews_header', models.CharField(max_length=100, verbose_name='Заголовок отзывов')),
                ('questions_header', models.CharField(max_length=100, verbose_name='Заголовок вопросов')),
            ],
            options={
                'verbose_name': 'Заголовоки страницы',
                'verbose_name_plural': 'Заголовки страницы',
                'db_table': '',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PageSlider',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anons_slider_name', models.CharField(max_length=50, verbose_name='Имя слайда')),
                ('anons_slider_text', models.CharField(max_length=50, verbose_name='Текст слайда')),
                ('anons_slider_image', models.ImageField(upload_to='img', verbose_name='Картинка слайда')),
                ('anons_slider_bgcolor', models.CharField(default='#F0F0F0', max_length=7, verbose_name='Цвет фона слайда')),
                ('anons_slider_link', models.CharField(max_length=200, verbose_name='Сылка слайда')),
            ],
            options={
                'verbose_name': 'Слайд анонса',
                'verbose_name_plural': 'Слайды анонса',
                'db_table': '',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ProgrammsBig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('big_text', models.CharField(max_length=50, verbose_name='Название блока')),
                ('big_img', models.FileField(upload_to='img', verbose_name='Картинка блока')),
            ],
            options={
                'verbose_name': 'Большой блок ',
                'verbose_name_plural': 'Большие блоки',
                'db_table': '',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ProgrammsSmall',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название блока')),
                ('small_img', models.FileField(upload_to='img', verbose_name='Картинка блока')),
            ],
            options={
                'verbose_name': 'Маленький блок ',
                'verbose_name_plural': 'Маленькие блоки',
                'db_table': '',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='QuestionsAnswers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=200, verbose_name='Вопрос')),
                ('answer', models.CharField(max_length=500, verbose_name='Ответ')),
                ('group', models.CharField(choices=[('tarifs', 'Тарифы'), ('products', 'Продукты'), ('weight', 'Вес')], default='products', max_length=20, verbose_name='Группа вопросов')),
            ],
            options={
                'verbose_name': 'Вопрос и ответ',
                'verbose_name_plural': 'Вопросы и ответы',
            },
        ),
        migrations.CreateModel(
            name='Reviews',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Имя автора')),
                ('age', models.CharField(max_length=10, verbose_name='Возраст')),
                ('text', models.CharField(max_length=500, verbose_name='Текст отзыва')),
                ('before_img', models.ImageField(upload_to='img', verbose_name='Фото "до"')),
                ('after_img', models.ImageField(upload_to='img', verbose_name='Фото "после"')),
            ],
            options={
                'verbose_name': 'Отзыв',
                'verbose_name_plural': 'Отзывы',
            },
        ),
        migrations.CreateModel(
            name='MenuSlider',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название блюда')),
                ('menu_discription', models.CharField(max_length=500, verbose_name='Описание блюда')),
                ('big_img', models.ImageField(upload_to='img', verbose_name='Картинка большого слайда')),
                ('small_img', models.ImageField(upload_to='img', verbose_name='Картинка маленького слайда')),
                ('kkal', models.CharField(max_length=20, verbose_name='Колличество калорий')),
                ('gramm', models.CharField(max_length=20, verbose_name='Колличество грамм')),
                ('price', models.CharField(max_length=10, verbose_name='Цена блюда')),
                ('discount', models.CharField(blank=True, max_length=10, null=True, verbose_name='Цена со скидкой, если есть')),
                ('days_list', models.ManyToManyField(related_name='days', to='main_page.Days', verbose_name='Дни недели')),
                ('menu_list', models.ManyToManyField(related_name='menu_group', to='main_page.MenuGroup', verbose_name='Категории меню')),
            ],
            options={
                'verbose_name': 'Позиции меню ',
                'verbose_name_plural': 'Меню',
            },
        ),
    ]
